<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019 ubirch GmbH
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.ubirch.filter</groupId>
    <artifactId>filter-service</artifactId>
    <version>1.0</version>
    <name>${project.artifactId}</name>
    <description>an app to filter upp in case of replay attack and to prevent duplications</description>
    <packaging>jar</packaging>
    <inceptionYear>2019</inceptionYear>

    <organization>
        <name>ubirch GmbH</name>
        <url>https://ubirch.com/</url>
    </organization>

    <developers>
        <developer>
            <name>Lotta Rueger</name>
            <email>lotta.rueger@ubirch.com</email>
            <organization>ubirch GmbH</organization>
            <organizationUrl>https://ubirch.com/</organizationUrl>
        </developer>
    </developers>


    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>


    <properties>

        <build.number>${timestamp}-dev</build.number>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <encoding>UTF-8</encoding>

        <!-- versions -->
        <scala.version>2.12.8</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
        <io.monix.version>2.3.2</io.monix.version>
        <guice.version>4.1.0</guice.version>
        <embedded-cassandra-test>4.0.7</embedded-cassandra-test>
        <ubirch-crypto.version>2.0.6</ubirch-crypto.version>
        <io.getquill.version>4.6.0</io.getquill.version>
        <ubirch-cassandra-utils.version>1.0-SNAPSHOT</ubirch-cassandra-utils.version>

        <!-- plugins -->
        <scala-maven-plugin.version>3.3.2</scala-maven-plugin.version>
        <maven-surefire-plugin.version>2.7</maven-surefire-plugin.version>
        <scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <dockerfile-maven-plugin.version>1.4.4</dockerfile-maven-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <scalatest-embedded-kafka>2.3.0</scalatest-embedded-kafka>
        <scalatest.version>3.0.5</scalatest.version>
        <mockito.version>2.23.4</mockito.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <maven-scalafmt.version>1.0.1614576627.86a5663</maven-scalafmt.version>
        <!-- plugins -->

    </properties>


    <repositories>
        <repository>
            <id>snapshots-repo</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>gitlab-maven</id>
            <url>https://gitlab.com/api/v4/projects/37429227/packages/maven</url>
        </repository>
    </repositories>

    <dependencies>

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-kafka-express</artifactId>
            <version>1.2.11-SNAPSHOT</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.ubirch/ubirch-kafka-envelope -->
        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-kafka-envelope</artifactId>
            <version>1.0.4-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-protocol-java</artifactId>
            <version>2.1.3-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-crypto</artifactId>
            <version>${ubirch-crypto.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- redis client redisson -->
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson</artifactId>
            <version>3.10.5</version>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.nosan</groupId>
            <artifactId>embedded-cassandra</artifactId>
            <version>${embedded-cassandra-test}</version>
        </dependency>

        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
            <version>0.9.0</version>
        </dependency>


        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-cassandra-utils_${scala.compat.version}</artifactId>
            <version>${ubirch-cassandra-utils.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.getquill/quill-cassandra-monix -->
        <dependency>
            <groupId>io.getquill</groupId>
            <artifactId>quill-cassandra-monix_${scala.compat.version}</artifactId>
            <version>${io.getquill.version}</version>
        </dependency>

        <dependency>
            <groupId>io.getquill</groupId>
            <artifactId>quill-cassandra_${scala.compat.version}</artifactId>
            <version>${io.getquill.version}</version>
        </dependency>


        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>io.monix</groupId>
            <artifactId>monix_${scala.compat.version}</artifactId>
            <version>${io.monix.version}</version>
            <type>pom</type>
        </dependency>


        <!-- Test -->

        <dependency>
            <groupId>io.github.embeddedkafka</groupId>
            <artifactId>embedded-kafka_${scala.compat.version}</artifactId>
            <version>${scalatest-embedded-kafka}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.github.sebruck/scalatest-embedded-redis -->
        <dependency>
            <groupId>com.github.sebruck</groupId>
            <artifactId>scalatest-embedded-redis_2.12</artifactId>
            <version>0.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
        </dependency>

        <!-- Test -->

    </dependencies>

    <build>

        <plugins>

            <!-- code formatting -->
            <plugin>
                <groupId>org.antipathy</groupId>
                <!-- The scala binary here doesn't need to match the project version -->
                <artifactId>mvn-scalafmt_${scala.compat.version}</artifactId>
                <!-- This represents the desired version of the plugin, whould be in the form:
                     (major).(minor).(commitepoch).(commithash), which can be found here:
                     https://github.com/simonjpegg/mvn_scalafmt/releases
                     e.g. <version>1.0.1589620826.41b214a</version>
                     Note: The SCALA version is OMITTED from this value
                -->
                <version>${maven-scalafmt.version}</version>
                <configuration>
                    <configLocation>https://raw.githubusercontent.com/ubirch/ubirch-scalafmt-rules/main/.scalafmt.conf</configLocation> <!-- path to config -->
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-unchecked</arg>
                                <arg>-deprecation</arg>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- copy all dependencies into the target/lib dir for our docker image -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest-maven-plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.ubirch.filter.Service</mainClass>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- create and/or push the created docker image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <dependencies>

                </dependencies>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildDirectory>${project.build.outputDirectory}</buildDirectory>
                    <repository>ubirch/${project.artifactId}</repository>
                    <tag>${build.number}</tag>
                    <buildArgs>
                        <VERSION>${project.version}</VERSION>
                        <BUILD>${build.number}</BUILD>
                        <SERVICE_NAME>${project.name}</SERVICE_NAME>
                        <JAR_LIBS>target/lib</JAR_LIBS>
                        <JAR_FILE>target/${project.build.finalName}.${project.packaging}</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
            <!-- for mvn deploy to work, disable the default deploy plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
