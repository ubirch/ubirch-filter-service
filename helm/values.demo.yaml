namespace: ubirch-demo-filter
fullname: ubirch.filter-service
name: filter-service
image:
  tag: latest # set to your local image tag if needed

# settings for ingest
keyServiceURL: "key-service-core-demo.core-demo.svc.cluster.local:8095"
serverUuid: "10b2e1a4-56b3-4fff-9ada-cc8c20f93016"

ingress:
  enabled: true
  annotations:
    certmanager.k8s.io/acme-challenge-type: "dns01"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-demo"
    certmanager.k8s.io/acme-dns01-provider: "demo-dns-demo-ubirch-com"
    kubernetes.io/ingress.allow-http: "false"
  path: /
  hosts:
    - demo.ubirch.com
  tls:
    - secretName: filter-demo-ubirch-com-certificate
      hosts:
        - filter.demo.ubirch.com

redis:
  masterURL: "redis-stable-master.core-demo.svc.cluster.local:6379"
  slaveURL: "redis-stable-slave.core-demo.svc.cluster.local:6379"
  #not using master and slave till now, should I?
  SSL: "true"
  host: ""
  # This port should be the ssl or non-ssl port depending on the value of the key "SSL"
  port: ""
  pw: "redis-secrets-avatar"
  usecluster: ""
  name: "hashes_payload"

kafka:
  consumer:
    URL: "kafka.core-demo.svc.cluster.local:9092"
    topic: "json.to.sign"
    groupID: ""
    errortopic: "com.ubirch.filter.error"
    timeout: 1
    poolrec: 500
  producer:
    URL: "kafka.core-demo.svc.cluster.local:9092"
    errortopic: "com.ubirch.filter.error"
    rejectiontopic: "com.ubirch.filter.rejection"
    topic: "com.ubirch.eventlog.encoder"
    timeout: 2

metrics:
  prometheus:
    port: 4321

verification:
  environment: "demo"
