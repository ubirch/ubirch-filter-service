namespace: ubirch-prod
fullname: ubirch.filter-service
name: filter-service
image:
  tag: latest # set to your local image tag if needed
# only set false in case of running tests with replicated data
state:
  active: "true"

# settings for ingest
keyServiceURL: "key-service-core-prod.core-prod.svc.cluster.local:8095"
serverUuid: "10b2e1a4-56b3-4fff-9ada-cc8c20f93016"
service:
  type: "NodePort"
  replicaCount: 1

redis:
main:
  host: "redis-stable-master.core-prod.svc.cluster.local"
  replicated:
    host: "redis-stable-slave.core-prod.svc.cluster.local"
  port: "6379"
  pw: "redis-secrets"
  usereplicated: "true"
  name: "hashes_payload"

kafka:
  consumer:
    URL: "kafka.core-prod.svc.cluster.local:9092"
    topic: "json.to.sign"
    groupID: ""
    errortopic: "com.ubirch.filter.error"
    timeout: 1
    poolrec: 500
  producer:
    URL: "kafka.core-prod.svc.cluster.local:9092"
    errortopic: "com.ubirch.filter.error"
    rejectiontopic: "com.ubirch.filter.rejection"
    topic: "com.ubirch.eventlog.encoder"
    timeout: 2

metrics:
  prometheus:
    port: 4321

verification:
  environment: "prod"
