include "application.base.conf"

filterService {
  kafkaApi {

    kafkaConsumer {
      //colon-separated values of IP/Hostname and ports
      bootstrapServers = ${FILTER_ENV_KAFKA_CONS_BOOTSTRAP}
      // subscribe to topic "test" for... testing purposes
      topic = ${FILTER_ENV_KAFKA_CONS_TOPIC}
      //If empty, a group id will be created.
      groupId = ${FILTER_ENV_KAFKA_CONS_GROUPID}
      errorTopic = ${FILTER_ENV_KAFKA_CONS_ERRORTOPIC}
      gracefulTimeout = ${FILTER_ENV_KAFKA_CONS_TIMEOUT}
      maxPoolRecords = ${FILTER_ENV_KAFKA_CONS_POOLREC}
    }

    kafkaProducer {
      //colon-separated values of IP/Hostname and ports
      bootstrapServers = ${FILTER_ENV_KAFKA_PROD_BOOTSTRAP}
      errorTopic = ${FILTER_ENV_KAFKA_PROD_ERRORTOPIC}
      rejectionTopic = ${FILTER_ENV_KAFKA_PROD_REJECTIONTOPIC}
      topic = ${FILTER_ENV_KAFKA_PROD_TOPIC}
      gracefulTimeout = ${FILTER_ENV_KAFKA_PROD_TIMEOUT}

    }
  }

  metrics {
    prometheus {
      port = ${FILTER_ENV_METRICS_PROMETHEUS_PORT}
    }
  }

  redis {
    wssl = ${FILTER_ENV_REDIS_SSL}
    host = ${FILTER_ENV_REDIS_HOST}
    port = ${FILTER_ENV_REDIS_PORT}
    password = ${FILTER_ENV_REDIS_PW} //Todo: should I use a password?
    useCluster = ${FILTER_ENV_REDIS_USECLUSTER}//Todo: will we have more than one instances of this service, probably yes, non?
    cacheName = ${FILTER_ENV_REDIS_NAME}
  }

  verification {
    environment = ${FILTER_ENV_VERIFICATION_ENV}
  }
}